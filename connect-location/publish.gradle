apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    libraryName = 'connect-location'
    artifact = 'connect-location'

    libraryDescription = 'Connect Location SDK provides integration to IFTTT Location service.'

    bintrayRepo = 'Maven'
    bintrayName = 'ConnectLocation-Android'

    publishedGroupId = 'com.ifttt'

    siteUrl = 'https://github.com/IFTTT/ConnectSDK-Android'
    gitUrl = 'https://github.com/IFTTT/ConnectSDK-Android.git'

    licenseName = 'MIT'
    licenseUrl = 'https://github.com/IFTTT/ConnectSDK-Android/blob/master/LICENSE'
    allLicenses = ['MIT']
}

group = publishedGroupId

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                name libraryName
                description libraryDescription
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id 'lzanita09'
                        name 'Zhe Lu'
                        email 'zhe@ifttt.com'
                    }
                    developer {
                        id 'priyaashah'
                        name 'Priya Shah'
                        email 'priya@ifttt.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

version = libVersion

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath +=
            files(android.libraryVariants.collect { variant -> variant.javaCompileProvider.get().classpath.files
            })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {

    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').canRead()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        user = properties.getProperty('bintray.user')
        key = properties.getProperty('bintray.apikey')
        pkg.version.gpg.passphrase = properties.getProperty('bintray.gpg.passphrase')
    }

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = false
        version {
            name = libVersion
            desc = libraryDescription
            released = new Date()
            vcsTag = libVersion
            gpg {
                sign = true
            }
        }
    }
}
