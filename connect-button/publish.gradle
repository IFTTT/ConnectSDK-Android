apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    libraryName = 'connect-button'
    artifactName = 'connect-button'
    libraryDescription =
            'Connect Button SDK is a library that helps facilitate the integration of the Connect Button and Connection API.'

    publishedGroupId = 'com.ifttt'

    siteUrl = 'https://github.com/IFTTT/ConnectSDK-Android'
    gitUrl = 'https://github.com/IFTTT/ConnectSDK-Android.git'

    licenseName = 'MIT'
    licenseUrl = 'https://github.com/IFTTT/ConnectSDK-Android/blob/master/LICENSE'
}

group = publishedGroupId
version = libVersion

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

afterEvaluate {
    javadoc.classpath +=
            files(android.libraryVariants.collect { variant -> variant.javaCompileProvider.get().classpath.files
            })
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                artifact sourcesJar
                artifact javadocJar

                groupId = publishedGroupId
                artifactId = artifactName
                version = libVersion

                pom {
                    groupId = publishedGroupId
                    artifactId = artifactName

                    description = libraryDescription
                    url = siteUrl
                    name = libraryName

                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = 'lzanita09'
                            name = 'Zhe Lu'
                            email = 'zhe@ifttt.com'
                        }
                        developer {
                            id = 'priyaashah'
                            name = 'Priya Shah'
                            email = 'priya@ifttt.com'
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }
            }
        }
    }
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    ext['signing.keyId'] = properties.getProperty('signing.keyId')
    ext['signing.password'] = properties.getProperty('signing.password')
    ext['signing.secretKeyRingFile'] = properties.getProperty('signing.secretKeyRingFile')
}

signing {
    sign publishing.publications
}
